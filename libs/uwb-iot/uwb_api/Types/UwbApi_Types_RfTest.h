/*
 *
 * Copyright 2018-2020 NXP.
 *
 * NXP Confidential. This software is owned or controlled by NXP and may only be
 * used strictly in accordance with the applicable license terms. By expressly
 * accepting such terms or by downloading,installing, activating and/or otherwise
 * using the software, you are agreeing that you have read,and that you agree to
 * comply with and are bound by, such license terms. If you do not agree to be
 * bound by the applicable license terms, then you may not retain, install, activate
 * or otherwise use the software.
 *
 */

#ifndef UWBAPI_TYPES_RF_TEST_H
#define UWBAPI_TYPES_RF_TEST_H

#include "UwbApi_Types.h"

/**
 *  \brief Types used by UWB RX and TX Performance Tests
 */

/** @addtogroup Uwb_RfTest_Types
 *
 * @{ */

/**
 *  \name Test Configuration parameters supported in UWB API layer.
 */
/* @{ */
typedef enum testConfig
{
    /** no of outliers in RSSI measurements in PER Rx to filter off. */
    RSSI_AVG_FILT_CNT = 0xE500,
    /** 0:Calibration level 1, 1: Calibration level 2 */
    RSSI_CALIBRATION_OPTION,
    /** AGC gain setting of Rx, applicable only when
     * RSSI_CALIBRATION_OPTION = 0. */
    AGC_GAIN_VAL_RX

} eTestConfig;
/* @} */

/**
 * \brief  Structure lists out the mandatory configurations to be set for PER RF
 * test.
 */
/* @{ */
typedef struct phRfTestParams
{
    /** Start time of TX in 124.8MHz snapshot ticks */
    UINT32 rmarkerTxStart;
    /** Start time of RX in 124.8MHz snapshot ticks */
    UINT32 rmarkerRxStart;
    /** num Of Pckts */
    UINT32 numOfPckts;
    /** t Gap, tGap >> packet len */
    UINT32 tGap;
    /** t Start in us */
    UINT32 tStart;
    /** t Win, tWin > TStart */
    UINT32 tWin;
    /** RAW PHR value, [b12-b0]: RAWPHR value, b14: ranging bit,
     * b15: generated by fw */
    UINT16 rawPhr;
    /** randomized Size, 0: No randomization, 1: Take 1st
     * byte of PSDU data as seed */
    UINT8 randomizedSize;
    /** Sts Index Auto Increment, 0x00: fixed sts index
     * value, 0x01: increment for every frame in PER */
    UINT8 stsIndexAutoIncr;
    /** b0: MAC header present, b1:MAC footer present; (default = 0x03)
     * both b0 and b1 must be set to 1 for ranging and data transfer session
     */
    UINT8 macCfg;

} phRfTestParams_t;
/* @}*/

/**
 * \brief  Structure lists out the per rx notification.
 */
/* @{ */
typedef struct phRfTestData
{
    /** Status */
    UINT8 status;
    /** Data length */
    UINT16 dataLength;
    /** Data received */
    UINT8 data[MAX_UCI_PACKET_SIZE];
} phRfTestData_t;
/* @}*/

/**
 * \brief  Structure lists out the per tx notification.
 */
/* @{ */
typedef struct phPerTxData
{
    /** Status */
    UINT8 status;
} phPerTxData_t;
/* @}*/

/** @} */ /* @addtogroup Uwb_RfTest_Types */

#endif
